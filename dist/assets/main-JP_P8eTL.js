(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))r(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function n(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(t){if(t.ep)return;t.ep=!0;const s=n(t);fetch(t.href,s)}})();const z="https://brflorida.app.n8n.cloud/webhook/legal-analysis-upload",I=100*1024*1024;let l=null,d=new Map,D=0,p,f,E,w,h,L,x,c,y,u;function F(o){if(o===0)return"0 B";const e=1024,n=["B","KB","MB","GB"],r=Math.floor(Math.log(o)/Math.log(e));return parseFloat((o/Math.pow(e,r)).toFixed(1))+" "+n[r]}function S(o,e){o.preventDefault(),e?p.classList.add("dragover"):f.classList.add("dragover")}function B(o,e){o.preventDefault(),e?p.classList.remove("dragover"):f.classList.remove("dragover")}function C(o,e){var r;o.preventDefault(),e?p.classList.remove("dragover"):f.classList.remove("dragover");const n=Array.from(((r=o.dataTransfer)==null?void 0:r.files)||[]);M(n,e)}function $(o,e){const n=o.target,r=Array.from(n.files||[]);M(r,e),n.value=""}function M(o,e){var r;const n=["pdf","docx","doc","txt"];if(e){if(o.length>1){g("‚ö†Ô∏è Please select only one intake form file.","error");return}const t=o[0];if(!t)return;const s=(r=t.name.split(".").pop())==null?void 0:r.toLowerCase();if(!s||!["pdf","docx","doc"].includes(s)){g("‚ö†Ô∏è Please select a PDF or Word document for the intake form.","error");return}l={file:t,name:t.name,size:t.size,type:s},g(`‚úÖ Intake form uploaded: ${t.name}`,"success")}else o.forEach(t=>{var a;const s=(a=t.name.split(".").pop())==null?void 0:a.toLowerCase();if(s&&n.includes(s)){const i="file_"+ ++D;d.set(i,{file:t,name:t.name,size:t.size,type:s})}else console.warn(`Skipped unsupported file: ${t.name}`)});b(),k()}function g(o,e){h.textContent=o,h.className=`requirement-note ${e}`,h.style.display="block"}function b(){if(!(l||d.size>0)){L.style.display="none";return}L.style.display="block";const e=(l?l.size:0)+Array.from(d.values()).reduce((n,r)=>n+r.size,0);if(document.getElementById("intakeCount").textContent=l?"1":"0",document.getElementById("totalFiles").textContent=d.size.toString(),document.getElementById("totalSize").textContent=F(e),e>I*.8?(u.style.display="block",e>I?(u.textContent="‚ùå Total file size exceeds 100MB limit. Please remove some files.",u.classList.add("size-error")):(u.textContent="‚ö†Ô∏è Total file size is approaching the 100MB limit",u.classList.remove("size-error"))):u.style.display="none",x.innerHTML="",l){const n=document.createElement("div");n.className="file-item intake-file",n.innerHTML=`
      <div class="file-name">${l.name}</div>
      <div class="file-type intake">${l.type.toUpperCase()}</div>
      <div class="file-category category-intake">INTAKE FORM</div>
      <div class="file-size">${F(l.size)}</div>
      <button type="button" class="file-remove" onclick="removeIntakeForm()">
        Remove
      </button>
    `,x.appendChild(n)}Array.from(d.entries()).forEach(([n,r])=>{const t=document.createElement("div");t.className="file-item",t.innerHTML=`
      <div class="file-name">${r.name}</div>
      <div class="file-type ${r.type}">${r.type.toUpperCase()}</div>
      <div class="file-category category-case">CASE DOC</div>
      <div class="file-size">${F(r.size)}</div>
      <button type="button" class="file-remove" onclick="removeFile('${n}')">
        Remove
      </button>
    `,x.appendChild(t)})}function A(){l=null,g("‚ö†Ô∏è Please upload a client intake form to proceed.","error"),b(),k()}function P(o){d.delete(o),b(),k()}function T(){l=null,d.clear(),g("‚ö†Ô∏è Please upload a client intake form to proceed.","error"),b(),k()}function k(){const o=(l?l.size:0)+Array.from(d.values()).reduce((t,s)=>t+s.size,0),e=!!l,n=d.size>0,r=o<=I;c.disabled=!e||!n||!r,e?n?r?c.textContent=`üöÄ Generate Analysis (${d.size+1} documents)`:c.textContent="‚ùå File Size Limit Exceeded":c.textContent="‚ö†Ô∏è Upload Case Documents Required":c.textContent="‚ö†Ô∏è Upload Intake Form Required"}async function N(o){var t,s;if(o.preventDefault(),!l){m("‚ö†Ô∏è Please upload the client intake form.","error");return}if(d.size===0){m("‚ö†Ô∏è Please upload at least one case document.","error");return}if(!document.getElementById("uploadForm")){console.error('Form with ID "uploadForm" not found'),m("‚ùå System Error: Form not found. Please refresh the page.","error");return}const n=new FormData;n.append("clientName",document.getElementById("clientName").value),n.append("caseReference",document.getElementById("caseReference").value),n.append("attorneyName",document.getElementById("attorneyName").value),n.append("intakeForm",l.file);let r=0;d.forEach(a=>{n.append(`caseDocument${r}`,a.file),r++}),m(`üîÑ Analyzing intake form and ${d.size} case documents... This process may take several minutes.`,"processing"),c.disabled=!0,c.textContent="‚è≥ Generating Legal Analysis...",console.log("Submitting form data to n8n webhook..."),console.log("Webhook URL:",z),console.log("Form data entries:",Array.from(n.entries()).map(([a,i])=>i instanceof File?[a,`File: ${i.name} (${i.size} bytes)`]:[a,i]));try{const a=await fetch(z,{method:"POST",body:n});let i=null;if(a.ok){try{i=await a.json(),console.log("Full n8n response:",i)}catch(v){console.warn("Failed to parse JSON response:",v)}if(i&&i.status==="success")if(m(i.message,"success"),i.downloadLinks){console.log("Download links found:",i.downloadLinks);const v=`
            <div style="margin-top: 20px; padding: 20px; background: #f0f9ff; border-radius: 8px; border: 1px solid #bfdbfe;">
              <h4 style="color: #1e40af; margin-bottom: 15px; font-size: 18px;">üì• Download Generated Files</h4>
              <div style="display: flex; gap: 15px; flex-wrap: wrap; margin-bottom: 15px;">
                <a href="${i.downloadLinks.findingsLetter}"
                   download="${((t=i.emailDetails)==null?void 0:t.emlFileName)||"findings-letter.eml"}"
                   style="background: #059669; color: white; padding: 12px 20px; text-decoration: none; border-radius: 6px; font-weight: 600; display: inline-block;">
                   üìß Email Letter (.eml)
                </a>
                <a href="${i.downloadLinks.caseAnalysis}"
                   download="${((s=i.emailDetails)==null?void 0:s.txtFileName)||"case-analysis.txt"}"
                   style="background: #0284c7; color: white; padding: 12px 20px; text-decoration: none; border-radius: 6px; font-weight: 600; display: inline-block;">
                   üìÑ Text Format (.txt)
                </a>
                <a href="${i.downloadLinks.executiveSummary}"
                   download="executive-summary.txt"
                   style="background: #7c3aed; color: white; padding: 12px 20px; text-decoration: none; border-radius: 6px; font-weight: 600; display: inline-block;">
                   üìã Summary (.txt)
                </a>
              </div>
              <p style="margin: 10px 0 0 0; color: #4b5563; font-size: 14px; line-height: 1.4;">
                üí° <strong>How to use:</strong> Click ".eml" to import into your email client, or click ".txt" to download text you can copy/paste.
              </p>
            </div>
          `;y.innerHTML+=v}else console.error("No downloadLinks in response. Full result:",i),y.innerHTML+='<p style="color: #f59e0b; margin-top: 10px;">‚ö†Ô∏è Analysis completed but download links not available.</p>';else{const v=(i==null?void 0:i.message)||"Analysis completed but response format unexpected";m(`‚ö†Ô∏è ${v}`,"error"),console.error("Unexpected response format:",i)}}else m(`‚ùå Server Error: HTTP ${a.status} ${a.statusText}`,"error")}catch(a){console.error("Error submitting form:",a),m(`‚ùå System Error: ${a.message}`,"error")}finally{k()}}function m(o,e){y.innerHTML=o,y.className=`status ${e}`,y.style.display="block",y.scrollIntoView({behavior:"smooth",block:"nearest"})}window.removeIntakeForm=A;window.removeFile=P;window.clearAllFiles=T;function O(){if(p=document.getElementById("intakeUploadSection"),f=document.getElementById("documentsUploadSection"),E=document.getElementById("intakeInput"),w=document.getElementById("documentsInput"),h=document.getElementById("intakeStatus"),L=document.getElementById("fileManager"),x=document.getElementById("fileListContainer"),c=document.getElementById("submitBtn"),y=document.getElementById("status"),u=document.getElementById("sizeWarning"),!p||!f||!E||!w||!h||!L||!x||!c||!y||!u){console.error("Required DOM elements not found");return}p.addEventListener("dragover",e=>S(e,!0)),p.addEventListener("dragleave",e=>B(e,!0)),p.addEventListener("drop",e=>C(e,!0)),f.addEventListener("dragover",e=>S(e,!1)),f.addEventListener("dragleave",e=>B(e,!1)),f.addEventListener("drop",e=>C(e,!1)),E.addEventListener("change",e=>$(e,!0)),w.addEventListener("change",e=>$(e,!1));const o=document.getElementById("uploadForm");o&&o.addEventListener("submit",N),g("‚ö†Ô∏è Please upload a client intake form to proceed.","error"),console.log("Legal Document Analysis Portal initialized with enhanced UI")}document.addEventListener("DOMContentLoaded",O);
//# sourceMappingURL=main-JP_P8eTL.js.map
